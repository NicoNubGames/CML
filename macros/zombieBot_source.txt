// A zombie bot to surpass Metal Gear

//.................................................
//.......QQQQQQQQQQ................JJJJJ....IIIII..
//.....QQQQQQQQQQQQQ...............JJJJJ....IIIII..
//....QQQQQQQQQQQQQQQQ.............JJJJJ....IIIII..
//...QQQQQQQQQQQQQQQQQ.............JJJJJ....IIIII..
//..QQQQQQQQQ..QQQQQQQQ............JJJJJ....IIIII..
//..QQQQQQ.......QQQQQQ............JJJJJ....IIIII..
//.QQQQQQ.........QQQQQQ...........JJJJJ....IIIII..
//.QQQQQQ.........QQQQQQ...........JJJJJ....IIIII..
//.QQQQQQ..........QQQQQ...........JJJJJ....IIIII..
//.QQQQQ...........QQQQQ...........JJJJJ....IIIII..
//.QQQQQ...........QQQQQ...........JJJJJ....IIIII..
//.QQQQQ...........QQQQQ...........JJJJJ....IIIII..
//.QQQQQ...........QQQQQ...........JJJJJ....IIIII..
//.QQQQQQ..........QQQQQ...........JJJJJ....IIIII..
//.QQQQQQ....QQQ..QQQQQQ.JJJJJ.....JJJJJ....IIIII..
//.QQQQQQQ...QQQQQQQQQQQ.JJJJJJ....JJJJJ....IIIII..
//..QQQQQQ..QQQQQQQQQQQQ..JJJJJ....JJJJJ....IIIII..
//..QQQQQQQQQQQQQQQQQQQ...JJJJJJ.JJJJJJJ....IIIII..
//...QQQQQQQQQQQQQQQQQQ...JJJJJJJJJJJJJ.....IIIII..
//....QQQQQQQQQQQQQQQQQ....JJJJJJJJJJJJ.....IIIII..
//.....QQQQQQQQQQQQQQQQQQ..JJJJJJJJJJJ......IIIII..
//.......QQQQQQQQQQQQQQQQ...JJJJJJJJJ.......IIIII..
//..................QQQQQ..........................
//...................QQQ...........................
//.................................................

UNSAFE(0)


//.................................................
//.....Options.....................................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// Ticks to wait between hits.  "1" means hit every other tick
#hit_frequency = 5

// Ticks to wait between resetting/surveying all chests (2 mins)
#reset_frequency = 2400

// Yaw delta to sweep to when attacking zombies
#sweep_frequency = 15

// How often to write to timeout file for restarting automatically
#timeout_frequency = 40

// Modifier to apply to the hit-wait time to add pattern fuzz
#random_frequency = 2

// Small identifier used in notifications to identify bot
&token = "zomb"

// File to log "events" to - unexpected or suboptimal conditions
&event_file = "zombieBot_events.txt"

// File to log performance data to for dashboard display
&data_file = "zombieBot_data.txt"

// Minimum durability to tolerate for a given looting sword
#min_durability = 50
#max_durability = 1562

// Number of flesh to disconnect once we reach.
#max_flesh = 27993

// Minimum health level we will tolerate before logging out
#minimum_health_limit = 15

// If a snitch event happens within this distance, disconnect
@#snitch_alert_radius = 10

// If we eat longer than these ticks, assume an eating glitch occured
#max_eating_time = 200

// How many times maximum to attempt the chest recording process
#max_chest_attempts = 3

// Wait delay between chest interactions
#chest_wait_delay = 10

// Fist mode is when we run out of swords, but still want to attack and manage inventory
enable_fist_mode = true


//.................................................
//.....Initialization..............................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#yaw_north = 360
#yaw_east = 450
#yaw_south = 180
#yaw_west = 270

LOOKS(%#yaw_east%,+0,.1)

WAIT(5t)

$$<CML_snapYaw.txt>

$$<zombieBot_blockPositions.txt>
#flesh_index = 0
#compactfuel_index = 1
#hopper_index = 2
#smeltfuel_index = 3
#iron_gold_index = 4
#repair_index = 5
#good_swords_index = 6
#bad_swords_index = 7
#despawn_index = 8
#zombie_index_1 = 9
#zombie_index_2 = 10
#zombie_index_3 = 11
#zombie_index_4 = 12

// Timers
#hit_timer = 0
#reset_timer = 0
#sweep_timer = 0
#timeout_timer = 0
#random_timer = 0

// Initialize safety checking
$$<CML_initSafety.txt>

fist_mode = false

// If automatic is set, log message that we restarted successfully
IF(@automatic)
	LOG("&a[%&token%]&7 %DATETIME% Automatic logon successful")
	LOGTO(%&event_file%,"Automatic logon successful")
ENDIF

@automatic = false

//.................................................
//.....Main Loop...................................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

DO


//.................................................
//.....Safety and Timeout..........................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	$$<CML_checkSafety.txt>

	IF(%#timeout_timer% == 0)
		LOGTO(zombieBot_timeout.txt,)
	ENDIF

	// Fix GUI if necessary
	IF(%GUI% != "NONE")
		PRESS(ESCAPE);
		WAIT(1t)
	ENDIF


//.................................................
//.....Chest Reset Procedure.......................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	// If it's time to reset the chests, do so
	IF(%#reset_timer% == 0)

		DO(%#max_chest_attempts%)
			error = false

			// First, get all hopper loot
			LOOKS(%#block_yaw[%#hopper_index%]%,%#block_pitch[%#hopper_index%]%,0.1)
			$$<CML_open.txt>
				IF(%&warn% != "")
					LOGTO(%&event_file%,%&warn%)
					error = true
				ELSE
					$$<CML_takeAllItems.txt>
				ENDIF
			$$<CML_close.txt>
			WAIT(%#chest_wait_delay%t)

			// Open compactfuel chest, counting how much fuel we have for compacting
			IF(!error)
				// Count how much fuel we have
				LOOKS(%#block_yaw[%#compactfuel_index%]%,%#block_pitch[%#compactfuel_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "charcoal coal"
						$$<CML_countChestItems.txt>
						#num_compactfuel = %#total%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			// Open flesh chest, counting current compacted stacks present.  Then, place all full stacks owned
			// As well count how many crates there are
			IF(!error)
				LOOKS(%#block_yaw[%#flesh_index%]%,%#block_pitch[%#flesh_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "rotten_flesh chest"
						$$<CML_countChestItems.txt>
						#num_flesh = %#counts[0]% * 64
						#num_crates = %#counts[1]%

						$$<CML_placeStacks.txt>
						#num_flesh = %#num_flesh% + %#count%

						$$<CML_countInventoryItems.txt>
						#num_flesh = %#num_flesh% + %#total%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			// Place irongold items, and count how many we placed
			IF(!error)
				LOOKS(%#block_yaw[%#iron_gold_index%]%,%#block_pitch[%#iron_gold_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "iron_helmet iron_chestplate iron_leggings iron_boots iron_shovel iron_sword iron_ingot golden_helmet golden_chestplate golden_leggings golden_boots"
						$$<CML_placeItems.txt>
						#num_irongold = %#count%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			IF(!error)
				// Count how much fuel we have
				LOOKS(%#block_yaw[%#smeltfuel_index%]%,%#block_pitch[%#smeltfuel_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "charcoal coal"
						$$<CML_countChestItems.txt>
						#num_smeltfuel = %#total%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			IF(!error)
				// Count how many XP bottles (or equivalent) we have, as well as number of plain swords
				LOOKS(%#block_yaw[%#repair_index%]%,%#block_pitch[%#repair_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "experience_bottle emerald emerald_block"
						$$<CML_placeItems.txt>
						$$<CML_countChestItems.txt>
						#num_xpbottles = %#counts[0]% + (%#counts[1]% * 9) + (%#counts[2]% * 81)

						&items = "diamond_sword"
						$$<CML_countChestItems.txt>
						#num_plainswords = %#total%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			// Choose diamond sword, so we can measure durability properly when necessary
			PICK("diamond_sword")

			IF(!error)
				// Count how many good swords we have, and count total durability
				LOOKS(%#block_yaw[%#good_swords_index%]%,%#block_pitch[%#good_swords_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "diamond_sword"
						$$<CML_countChestItems.txt>
						#num_goodswords = %#total%

						$$<CML_countChestItemsDurability.txt>
						#num_durability = %#total%

						IF(%ITEM% == "diamond_sword")
							#num_durability = %#num_durability% + %DURABILITY%
						ENDIF
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			IF(!error)
				// Count how many bad swords exist that still need repair
				LOOKS(%#block_yaw[%#bad_swords_index%]%,%#block_pitch[%#bad_swords_index%]%,0.1)
				$$<CML_open.txt>
					IF(%&warn% != "")
						LOGTO(%&event_file%,%&warn%)
						error = true
					ELSE
						&items = "diamond_sword"
						$$<CML_countChestItems.txt>
						#num_badswords = %#total%
					ENDIF
				$$<CML_close.txt>
				WAIT(%#chest_wait_delay%t)
			ENDIF

			IF(!error)
				BREAK
			ENDIF
		LOOP

		IF(error)
			LOG("&a[%&token%]&7 %DATETIME% Disconnected due to chests not consistently readable")
			LOGTO(%&event_file%,"Disconnected due to chests not consistently readable")
			DISCONNECT
			STOP
		ENDIF

		// Throw all items that are useless, if we have any
		&items = "chainmail_helmet chainmail_chestplate chainmail_leggings chainmail_boots leather_helmet leather_chestplate leather_leggings leather_boots potato feather carrot chicken"
		$$<CML_countInventoryItems.txt>
		IF(%#total% > 0)
			LOOKS(%#block_yaw[%#despawn_index%]%,%#block_pitch[%#despawn_index%]%,0.1)
			$$<CML_throwItems.txt>
		ENDIF

		// Log data entry to table
		LOGTO(%&data_file%,"%DATE% %TIME% %#num_flesh% %#num_crates% %#num_compactfuel% %#num_irongold% %#num_smeltfuel% %#num_xpbottles% %#num_plainswords% %#num_goodswords% %#num_durability% %#num_badswords%")

		// If we're in fist mode, and we have a sword in the inventory or in the chest, exit fist mode

		IF((#num_goodswords > 0) || (num_sword_inventory > 0))
			fist_mode = false
		ENDIF

		// Disconnect if flesh storage is over specified amount
		IF(%#num_flesh% >= %#max_flesh%)
			LOG("&a[%&token%]&7 %DATETIME% Disconnected due to flesh storage threshold exceeded")
			LOGTO(%&event_file%,"Disconnected due to flesh storage threshold exceeded")
			DISCONNECT
			STOP
		ENDIF
	ENDIF


//.................................................
//.....Sword Consistency Checks....................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	IF(!fist_mode)
		// Check the status of our sword(s).  If durability is low or sword is missing, consult chest.
		#valid_i = 0
		sword_not_good = false
		#count = 0
		FOR(#i,1,9)
			SLOT(%#i%)
			IF(%ITEM% == "diamond_sword")
				INC(#count)
				IF(%DURABILITY% >= %#min_durability%)
					#valid_i = %#i%
				ELSE
					sword_not_good = true
				ENDIF
			ENDIF
		NEXT

		// If there's more than one sword in hotbar, or none, or there's not one with good durability,
		// consult chest.
		IF(sword_not_good)
			LOOKS(%#block_yaw[%#bad_swords_index%]%,%#block_pitch[%#bad_swords_index%]%,0.1)
			$$<CML_open.txt>
				&items = "diamond_sword"
				$$<CML_placeItemsBelowDurability.txt>
			$$<CML_close.txt>
		ELSEIF((%#valid_i% == 0) || (%#count% != 1))
			LOOKS(%#block_yaw[%#good_swords_index%]%,%#block_pitch[%#good_swords_index%]%,0.1)
			$$<CML_open.txt>
				&items = "diamond_sword"
				$$<CML_placeItems.txt>
				&amounts = "1"
				$$<CML_takeItems.txt>
				$$<CML_countInventoryItems.txt>

				IF(!enable_fist_mode)
					IF(%#total% == 0)
						LOG("&a[%&token%]&7 %DATETIME% Disconnected due to out of good swords")
						LOGTO(%&event_file%,"Disconnected due to out of good swords")
						DISCONNECT
						STOP
					ENDIF
				ELSE
					IF(%#total% == 0)
						fist_mode = true
						LOG("&a[%&token%]&7 %DATETIME% Out of good swords, entering fist mode")
						LOGTO(%&event_file%,"Out of good swords, entering fist mode")
					ENDIF
				ENDIF
			$$<CML_close.txt>
		ELSE
			SLOT(%#valid_i%)
		ENDIF
	ENDIF


//.................................................
//.....Attack Logic................................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	LOOK(%#block_yaw[%#zombie_index_3%]%,%#block_pitch[%#zombie_index_3%]%)
	TRACE(4,true)

	IF(%TRACETYPE% != "ENTITY")
		LOOK(%#block_yaw[%#zombie_index_1%]%,%#block_pitch[%#zombie_index_1%]%)
		TRACE(4,true)
	ENDIF

	IF(%TRACETYPE% != "ENTITY")
		LOOK(%#block_yaw[%#zombie_index_2%]%,%#block_pitch[%#zombie_index_2%]%)
		TRACE(4,true)
	ENDIF

	IF(((%ITEM% == "diamond_sword") && (%DURABILITY% >= %#min_durability%)) || fist_mode)
		IF((%#hit_timer% >= %#hit_frequency%) && (%TRACETYPE% == "ENTITY"))
			KEY(attack)
			#hit_timer = -%#random_timer%
		ELSE
			INC(#hit_timer)
		ENDIF
	ENDIF


//.................................................
//.....Eating......................................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	// Eat flesh if we're hungry
	IF(%HUNGER% <= 18)
		PICK("rotten_flesh")

		IF(%ITEM% == "rotten_flesh")
			// Sneak so we don't open a chest instead of eat
			KEYDOWN(sneak)
			WAIT(5t)
			DO(%#max_eating_time%)
				KEY(use)
				WAIT(1t)
			UNTIL((%ITEM% != "rotten_flesh") || (%HUNGER% == 20))
			KEYUP(sneak)
		ENDIF
	ENDIF

	// If we have normal food, go ahead and eat it if the flesh didn't sate us
	$$<CML_eatFood.txt>


//.................................................
//.....Timer and Loop Resetting....................
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	IF(%#reset_timer% >= %#reset_frequency%)
		#reset_timer = 0
	ELSE
		INC(#reset_timer)
	ENDIF

	IF(%#sweep_timer% >= %#sweep_frequency%)
		#sweep_timer = 0
	ELSE
		INC(#sweep_timer)
	ENDIF

	IF(%#timeout_timer% >= %#timeout_frequency%)
		#timeout_timer = 0
	ELSE
		INC(#timeout_timer)
	ENDIF

	IF(%#random_timer% >= %#random_frequency%)
		#random_timer = 0
	ELSE
		INC(#random_timer)
	ENDIF

	WAIT(1t)
LOOP

ENDUNSAFE